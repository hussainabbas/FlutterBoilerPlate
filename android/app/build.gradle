def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "ifisol.manawanui"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 19//flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    afterEvaluate {
        runConfigurationScript()
    }

    flavorDimensions "environment"

    productFlavors {
        uat {
            applicationId "ifisol.manawanui.uat"
            dimension "environment"
            versionNameSuffix "-uat"
            resValue "string", "app_name", "Manawanui"
        }
        staging {
            applicationId "ifisol.manawanui.staging"
            dimension "environment"
            versionNameSuffix "-staging"
            resValue "string", "app_name", "Manawanui"
        }
        production {
            applicationId "ifisol.manawanui"
            dimension "environment"
            resValue "string", "app_name", "Manawanui"
        }

        mlmw {
            dimension "environment"
            applicationId "com.ifisol.mylifemyway"
            resValue "string", "app_name", "MyLifeMyWay"
        }
    }
}

def runConfigurationScript() {
    def environmentVariables = []
    if (project.hasProperty('dart-defines')) {
        environmentVariables = project.property('dart-defines').split(',').collectEntries { entry ->
            def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
            [(pair.first()): pair.last()]
        }
    }
    exec {
        commandLine 'sh', '../../scripts/configure_project_android.sh', "${environmentVariables.FLAVOR}"
    }
}


flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:2.0.1'
}
